syntax = "proto3";
/*
		ID int64 `gorm:"primary_key;auto_increment;not_null" json:"id"`
		Name string `json:"name"`
		Nums string `json:"nums"`//工号
		Sex string `json:"sex"` //性别
		Level int64 `json:"level"`//等级
		Score int64 `json:"score"`//信誉分
		Place string `json:"place"`//住址
		Telephone string `json:"telephone"`//电话
		Mail string `json:"mail"`
		Description string `json:"description"`//补充描述
		ISWork bool `json:"is_work"`//是否在职
*/
package works;

option go_package = "proto;works";

service Works {
	rpc CreateWorker(Request_Workers)returns(Response_CreateWorker);
	rpc UpdateWorker(Request_Workers)returns(Response_CreateWorker);
	rpc DeleteWorkerByID(Request_Workers_ID)returns(Response_Workers);
	rpc FindWorkerByID(Request_Workers_ID)returns(Response_Worker_Show);
	rpc FindWorkerByName(Request_Workers_Name)returns(Response_Workers_Show);
	rpc FindAll(Request_Null)returns(Response_Workers_Show);
}
message Request_Null{

}
message Request_Workers{
	string name = 1;
	string nums = 2;
	string sex = 3;
	int64 level = 4;
	int64 score = 5;
	string place = 6;
	string telephone = 7;
	string mail = 8;
	string description = 9;
	bool ISWork = 10;
}
message Response_CreateWorker{
	int64 id = 1;
	string message = 2;
}
message Request_Workers_ID{
	int64 id = 1;
}
message Request_Workers_Name{
	string name = 1;
}
message Response_Workers{
	string message = 1;
}
message Response_Worker_Show{
	Request_Workers worker= 1;
}
message Response_Workers_Show{
	repeated Request_Workers workers = 1;
}